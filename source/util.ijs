
NB. =========================================================
gray2rgb=: 4 : 0
if. 1=x do.
  <.y*16bffffff
else.
  ($y)$ 256#.("1) _3]\ 255<. (64 16 1{~2 4 8 i.x) * 3#,y
end.
)

NB. =========================================================
ENDIAN=: ('a'={.2 ic a.i.'a')

NB. big endian 4-byte integers
be32=: ,@:(|."1)@(_4&(]\))^:ENDIAN@:(2&ic)
be32inv=: (_2&ic)@:(,@:(|."1)@(_4&(]\))^:ENDIAN)

NB. little endian 4-byte for reading RGBA
le32=: ,@:(|."1)@(_4&(]\))^:(-.ENDIAN)@:(2&ic)
le32inv=: (_2&ic)@:(,@:(|."1)@(_4&(]\))^:(-.ENDIAN))

NB. =========================================================
NB. png checksum
crc32=: ((_2&ic)@((4&{.)`(_4&{.)@.('a'~:{.2 ic a.i.'a'))@(3&ic))^:IF64 @: (((i.32) e. 32 26 23 22 16 12 11 10 8 7 5 4 2 1 0)&(128!:3))

NB. =========================================================
NB. interpret byte as signed
signbyte=: ] - 256 * 127 <  ]
